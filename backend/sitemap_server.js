import express from "express";
import process from "process";
import axios from "axios";
import dotenv from "dotenv";
import puppeteer from "puppeteer";
// import cron from "node-cron";
// import fs from "fs"; // –î–ª—è –æ—Ç–ª–∞–¥–∫–∏ (–ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ HTML)

dotenv.config();

const app = express();
const PORT = 3000;
const HOSTNAME = "https://moviegallery.tw1.ru";
const TMDB_API_TOKEN = process.env.TMDB_API_TOKEN;

// –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –≤–æ–∑–º–æ–∂–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü API TMDB
const MAX_PAGES = 500;

let cachedMovieIds = [];
let cachedTvIds = [];
let lastUpdated = null;
let isUpdatingCache = false; // –§–ª–∞–≥ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤

// Middleware –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –≤—Å–µ—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –≤–æ –≤—Ä–µ–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–µ—à–∞
app.use((req, res, next) => {
    if (isUpdatingCache) {
        console.warn(`üöß –°–µ—Ä–≤–µ—Ä –∑–∞–Ω—è—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö. –ë–ª–æ–∫–∏—Ä—É–µ–º: ${req.path}`);
        return res.status(503).send("üîÑ –°–µ—Ä–≤–µ—Ä –æ–±–Ω–æ–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
    }
    next();
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ ID —Ñ–∏–ª—å–º–æ–≤/—Å–µ—Ä–∏–∞–ª–æ–≤ —Å TMDB
async function fetchMovieOrTVIds(type) {
    console.log(`üîÑ –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º ${type} (–¥–æ ${MAX_PAGES} —Å—Ç—Ä–∞–Ω–∏—Ü)...`);

    let ids = [];
    const startTime = Date.now();

    for (let page = 1; page <= MAX_PAGES; page++) {
        try {
            const response = await axios.get(
                `https://api.themoviedb.org/3/${type}/popular?page=${page}`,
                { headers: { Authorization: `Bearer ${TMDB_API_TOKEN}` } }
            );

            if (response.data.results) {
                ids.push(...response.data.results.map(item => item.id));
            }

            // –ñ–¥–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –∑–∞–ø—Ä–æ—Å–æ–º
            const delay = Math.floor(Math.random() * 500) + 1;
            await new Promise(resolve => setTimeout(resolve, delay));

        } catch (error) {
            console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ ${type} (—Å—Ç—Ä–∞–Ω–∏—Ü–∞ ${page}):`, error.message);
        }
    }

    const endTime = Date.now();
    console.log(`‚è≥ –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞ ${type}: ${((endTime - startTime) / 60000).toFixed(1)} –º–∏–Ω`);
    console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ ${ids.length} ID –¥–ª—è ${type}`);

    return ids;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–µ—à–∞ —Ä–∞–∑ –≤ —Å—É—Ç–∫–∏
async function updateCache() {
    if (isUpdatingCache) return;

    isUpdatingCache = true; 
    console.log("‚ôªÔ∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–µ—à–∞ —Ñ–∏–ª—å–º–æ–≤ –∏ —Å–µ—Ä–∏–∞–ª–æ–≤...");

    cachedMovieIds = await fetchMovieOrTVIds("movie");
    cachedTvIds = await fetchMovieOrTVIds("tv");
    lastUpdated = new Date();

    console.log(`‚úÖ –ö–µ—à –æ–±–Ω–æ–≤–ª—ë–Ω: ${lastUpdated.toLocaleString()}`);
    isUpdatingCache = false; 
}

// –û–±–Ω–æ–≤–ª—è–µ–º –∫–µ—à –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–µ—Ä–≤–µ—Ä–∞
updateCache();

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–µ—à–∞ —Ä–∞–∑ –≤ —Å—É—Ç–∫–∏
// cron.schedule("05 3 * * *", async () => {
//     await updateCache();
// });

// –ò–Ω–¥–µ–∫—Å–Ω—ã–π sitemap.txt —Å —Å—Å—ã–ª–∫–∞–º–∏ –Ω–∞ –¥–æ—á–µ—Ä–Ω–∏–µ —Ñ–∞–π–ª—ã
app.get("/sitemap.txt", (req, res) => {
    res.header("Content-Type", "text/plain");
    console.log("üìÑ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–Ω–¥–µ–∫—Å–Ω—ã–π sitemap.txt");

    let sitemapContent = [
        `${HOSTNAME}/sitemap-movies.txt`,
        `${HOSTNAME}/sitemap-tv.txt`
    ].join("\n");

    res.send(sitemapContent);
});

// Sitemap –¥–ª—è —Ñ–∏–ª—å–º–æ–≤
app.get("/sitemap-movies.txt", (req, res) => {
    if (!cachedMovieIds.length) {
        console.warn("‚ö†Ô∏è sitemap-movies.txt –ø—É—Å—Ç! –í–æ–∑–≤—Ä–∞—â–∞–µ–º 404");
        return res.status(404).send("Not Found");
    }

    console.log(`üé¨ –û—Ç–¥–∞–µ–º sitemap-movies.txt (${cachedMovieIds.length} —Ñ–∏–ª—å–º–æ–≤)`);
    res.header("Content-Type", "text/plain");
    res.send(cachedMovieIds.map(id => `${HOSTNAME}/movie/${id}`).join("\n"));
});

// Sitemap –¥–ª—è —Å–µ—Ä–∏–∞–ª–æ–≤
app.get("/sitemap-tv.txt", (req, res) => {
    if (!cachedTvIds.length) {
        console.warn("‚ö†Ô∏è sitemap-tv.txt –ø—É—Å—Ç! –í–æ–∑–≤—Ä–∞—â–∞–µ–º 404");
        return res.status(404).send("Not Found");
    }

    console.log(`üì∫ –û—Ç–¥–∞–µ–º sitemap-tv.txt (${cachedTvIds.length} —Å–µ—Ä–∏–∞–ª–æ–≤)`);
    res.header("Content-Type", "text/plain");
    res.send(cachedTvIds.map(id => `${HOSTNAME}/tv/${id}`).join("\n"));
});

// Puppeteer —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ –¥–ª—è –ø–æ–∏—Å–∫–æ–≤–∏–∫–æ–≤
app.get("*", async (req, res) => {
    const url = `${HOSTNAME}${req.path}`;
    const userAgent = req.headers["user-agent"];

    if (/Googlebot|bingbot|YandexBot|DuckDuckBot/i.test(userAgent)) {
        console.log(`ü§ñ –ë–æ—Ç –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç ${url}, —Ä–µ–Ω–¥–µ—Ä–∏–º —á–µ—Ä–µ–∑ Puppeteer...`);

        const browser = await puppeteer.launch({
            headless: "new",
            args: [
                '--no-sandbox',
                '--disable-setuid-sandbox',
                '--disable-dev-shm-usage', // –í–∞–∂–Ω–æ –¥–ª—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–π –ø–∞–º—è—Ç–∏
                '--single-process',       // –£–º–µ–Ω—å—à–∞–µ—Ç –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤
                '--no-zygote',             // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è
                '--disable-gpu',           // –≠–∫–æ–Ω–æ–º–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤
            ],
        });

        const page = await browser.newPage();

        try {
            // –û—Ç–∫–ª—é—á–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –Ø–Ω–¥–µ–∫—Å.–ú–µ—Ç—Ä–∏–∫–∏
            await page.setRequestInterception(true);
            page.on('request', (req) => {
                if (req.url().includes('mc.yandex.ru')) {
                    console.log(`üö´ –ë–ª–æ–∫–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –∫ ${req.url()}`);
                    req.abort();
                } else {
                    req.continue();
                }
            });


            await page.goto(url, { waitUntil: "networkidle2", timeout: 15000 })
                .catch(err => console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ (–¢–∞–π–º–∞—É—Ç 15):", err));



            // –ï—Å–ª–∏ —ç—Ç–æ –≥–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ 
            if (url === `${HOSTNAME}/`) {

                console.log("üè† –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞! –ñ–¥—ë–º –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞...");

                await page.waitForFunction(() => {
                    return document.querySelector("#root")?.innerText.trim().length > 0;
                }, { timeout: 15000 }).catch(() => console.warn("‚ö†Ô∏è –ö–æ–Ω—Ç–µ–Ω—Ç –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª—Å—è!"));

                console.log("‚úÖ –ö–æ–Ω—Ç–µ–Ω—Ç –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∑–∞–≥—Ä—É–∂–µ–Ω!");
            }

            // –û–∂–∏–¥–∞–Ω–∏–µ –ø–æ—è–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π —Å–∏–≥–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
            await page.waitForSelector('.media-content-loaded', { timeout: 10000 })
                .catch(() => console.warn("‚ö†Ô∏è –≠–ª–µ–º–µ–Ω—Ç .media-content-loaded –Ω–µ –Ω–∞–π–¥–µ–Ω, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º."));

            let html = await page.content();

            // –£–¥–∞–ª—è–µ—Ç <noscript> –ú–µ—Ç—Ä–∏–∫–∏
            html = html
                .replace(/<noscript>.*?mc\.yandex\.ru\/watch.*?<\/noscript>/gis, "");

            // –õ–æ–≥–∏—Ä—É–µ–º HTML
            // fs.writeFileSync("after.html", html);

            await page.close();
            await browser.close();

            console.log(`‚úÖ –û—Ç–ø—Ä–∞–≤–∏–ª–∏ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π HTML –¥–ª—è ${url}`);
            return res.send(html);
        } catch (error) {
            console.error(`‚ùå –û—à–∏–±–∫–∞ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ ${url}:`, error.message);
            await page.close();
            await browser.close();
            return res.status(500).send("–û—à–∏–±–∫–∞ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ (—Å—Ç–∞—Ç—É—Å 500)");
        }
    }

    // –û–±—ã—á–Ω—ã–π —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ SPA-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    res.redirect(url);
});

// üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(PORT, () => console.log(`‚úÖ Sitemap —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç: http://localhost:${PORT}`));
